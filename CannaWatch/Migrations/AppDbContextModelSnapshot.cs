// <auto-generated />
using System;
using CannaWatch.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CannaWatch.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CannaWatch.Models.Plant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastFed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastWatered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PlantDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Strain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isHarvested")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("CannaWatch.Models.Strain", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AnxietyValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnxiousValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepressionValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DizzyValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DryEyeValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DryMouthValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EuphoricValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HappyValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsomniaValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PainValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParanoidValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelaxedValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SleepyValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StressValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThcLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpliftedValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Strains");
                });
#pragma warning restore 612, 618
        }
    }
}
